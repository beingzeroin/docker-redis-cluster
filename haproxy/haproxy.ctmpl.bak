global
    log 127.0.0.1   local0
    log 127.0.0.1   local1 notice
    debug
    stats timeout 30s
    maxconn {{with $maxconn:=key "service/haproxy/maxconn"}}{{$maxconn}}{{else}}4096{{end}}

defaults
    log global
    option httplog
    option dontlognull
    mode http{{range ls "service/haproxy/timeouts"}}
    timeout {{.Key}} {{.Value}}{{else}}
    timeout connect 5000
    timeout client  50000
    timeout server  50000{{end}}

{*
frontend http-in
    bind *:80{{range $i,$a:=services}}{{$path:=.Name}}{{range .Tags}}{{if eq . "rest"}}
    acl app{{$i}} path_beg -i /{{$path}}{{end}}{{end}}{{end}}
    {{range $i,$a:=services}}{{range .Tags}}{{if eq . "rest"}}
    use_backend srvs_app{{$i}} if app{{$i}}{{end}}{{end}}{{end}}

{{range $i,$a:=services}}{{$path:=.Name}}{{range .Tags}}{{if eq . "rest"}}
backend srvs_app{{$i}}
    mode http
    balance roundrobin
    option forwardfor
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    reqrep ^([^\ ]*\ /){{$path}}[/]?(.*)     \1\2{{range $c,$d:=service $a.Name}}
    server host{{$c}} {{.Address}}:{{.Port}} check{{end}}{{end}}{{end}}{{end}}
*}

listen stats *:9000
    mode http
    stats enable
    stats uri /
    stats hide-version
    #stats auth someuser:password

listen redis-postprocess-TCP-6379 0.0.0.0:6379  
    mode tcp
    option tcplog
    option tcp-check
    #uncomment these lines if you have basic auth
    #tcp-check send AUTH\ yourpassword\r\n
    #tcp-check expect +OK
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
   {{range $i, $a:=services}}{{$path:=.Name}}{{range .Tags}}{{if eq . "redis"}}
   server redis-{{$i}} 123.456.789.0:{{.Port}} maxconn 1024 check inter 1s
   {{end}}{{end}}{{end}}
